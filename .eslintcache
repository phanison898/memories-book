[{"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\reducers\\posts.js":"1","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\reducers\\index.js":"2","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\index.js":"3","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\form\\form.js":"4","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\App.js":"5","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\post.js":"6","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\postLoading.js":"7","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\form\\style.js":"8","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\actions\\posts.js":"9","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\index.js":"10","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\api\\index.js":"11"},{"size":372,"mtime":1608027032766,"results":"12","hashOfConfig":"13"},{"size":142,"mtime":1608002559839,"results":"14","hashOfConfig":"13"},{"size":571,"mtime":1608003266217,"results":"15","hashOfConfig":"13"},{"size":3361,"mtime":1608056846479,"results":"16","hashOfConfig":"13"},{"size":2892,"mtime":1608018520897,"results":"17","hashOfConfig":"13"},{"size":2573,"mtime":1608027258179,"results":"18","hashOfConfig":"13"},{"size":492,"mtime":1607999418731,"results":"19","hashOfConfig":"13"},{"size":1578,"mtime":1608051682871,"results":"20","hashOfConfig":"13"},{"size":739,"mtime":1608026898353,"results":"21","hashOfConfig":"13"},{"size":1225,"mtime":1608001118178,"results":"22","hashOfConfig":"13"},{"size":265,"mtime":1608026792907,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vd9jqf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\reducers\\posts.js",[],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\reducers\\index.js",[],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\index.js",[],["49","50"],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\form\\form.js",["51","52"],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\App.js",["53"],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\post.js",["54"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport moment from 'moment';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {useDispatch} from 'react-redux';\r\nimport {DeletePostData} from '../../actions/posts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"90%\",\r\n    margin:\"10px 0\",\r\n    alignItems:\"center\",\r\n    borderRadius:theme.spacing(2),\r\n    boxSizing:\"border-box\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n    cursor:\"pointer\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  tags:{\r\n    color:\"green\",\r\n    fontWeight:\"600\",\r\n    cursor:\"pointer\",\r\n  }\r\n}));\r\n\r\nconst Post = ({ post }) => {\r\n\r\n  const {_id, title, description, tags, selectedFile, date} = post;\r\n  const [tags_data] = tags;\r\n  const split_tags = tags_data.split(\",\");\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n\r\n    <Card className={classes.root}>\r\n\r\n      <CardHeader\r\n        avatar={<Avatar aria-label=\"recipe\" className={classes.avatar}>P</Avatar>}\r\n        action={<IconButton aria-label=\"settings\" onClick={()=>{dispatch(DeletePostData(_id))}}><MoreVertIcon /></IconButton>}\r\n        title={title}\r\n        subheader={moment(date).fromNow()}\r\n      />\r\n\r\n      <CardMedia className={classes.media} image={selectedFile} title={title} />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textPrimary\">{description}</Typography>\r\n        <Typography variant=\"caption\" className={classes.tags}>\r\n          {split_tags.map((tag)=>`#${tag.trim()} `)}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\" color=\"secondary\"><FavoriteIcon /></IconButton>\r\n        <IconButton aria-label=\"share\"><ShareIcon /></IconButton>\r\n      </CardActions>\r\n\r\n      </Card>\r\n    \r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\postLoading.js",[],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\form\\style.js",[],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\actions\\posts.js",[],"C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\components\\posts\\index.js",["55","56","57","58","59","60"],"import { connect} from \"react-redux\";\r\nimport Post from \"./post\";\r\nimport {Paper,Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from '@material-ui/core/colors';\r\nimport PostLoading from './postLoading';\r\nimport image from '../../images/Pattern-Randomized.svg';\r\nimport {red,blue} from '@material-ui/core/colors';\r\n\r\nconst styles = makeStyles((theme)=>({\r\n  root:{\r\n    width:\"100%\",\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\",\r\n    borderRadius:0,\r\n    border:\"none\",\r\n    paddingTop:theme.spacing(1),\r\n    \"& > *\":{\r\n      margin:\"0 0 10px 0\",\r\n    },\r\n  },\r\n  loading:{\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    alignContent:\"center\",\r\n  }\r\n}));\r\n\r\nconst Posts = (props) => {\r\n\r\n  const data = Array.from(props.posts);\r\n  const classes = styles();\r\n\r\n  return (\r\n\r\n    !data.length\r\n    ? <div className={classes.loading}><PostLoading /></div>\r\n    : <div className={classes.root}>\r\n      {data.map((post) => (<Post key={post._id} post={post} />))}\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({posts: state.posts});\r\n\r\nexport default connect(mapStateToProps)(Posts);\r\n","C:\\Users\\Phanison\\Documents\\Workspace\\React\\my-redux-practise\\src\\api\\index.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":72,"column":7,"nodeType":"67","messageId":"68","endLine":72,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":79,"column":11,"nodeType":"67","messageId":"68","endLine":79,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":16,"column":8,"nodeType":"67","messageId":"68","endLine":16,"endColumn":15},{"ruleId":"65","severity":1,"message":"72","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":3,"column":15,"nodeType":"67","messageId":"68","endLine":3,"endColumn":19},{"ruleId":"65","severity":1,"message":"74","line":5,"column":9,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"65","severity":1,"message":"75","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":13},{"ruleId":"65","severity":1,"message":"76","line":8,"column":9,"nodeType":"67","messageId":"68","endLine":8,"endColumn":12},{"ruleId":"65","severity":1,"message":"77","line":8,"column":13,"nodeType":"67","messageId":"68","endLine":8,"endColumn":17},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Success' is assigned a value but never used.","Identifier","unusedVar","'handleClick' is assigned a value but never used.","'axios' is defined but never used.","'Tooltip' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'grey' is defined but never used.","'image' is defined but never used.","'red' is defined but never used.","'blue' is defined but never used.","no-global-assign","no-unsafe-negation"]